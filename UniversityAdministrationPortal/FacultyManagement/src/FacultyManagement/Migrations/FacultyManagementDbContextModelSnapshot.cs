// <auto-generated />
using System;
using FacultyManagement.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FacultyManagement.Migrations
{
    [DbContext(typeof(FacultyManagementDbContext))]
    partial class FacultyManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FacultyManagement.Domain.CourseAssignments.CourseAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("assignment_date");

                    b.Property<Guid>("CourseID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("course_id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_on");

                    b.Property<Guid>("FacultyID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("faculty_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset?>("LastModifiedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("last_modified_on");

                    b.HasKey("Id")
                        .HasName("pk_course_assignments");

                    b.HasIndex("CourseID")
                        .HasDatabaseName("ix_course_assignments_course_id");

                    b.ToTable("course_assignments", (string)null);
                });

            modelBuilder.Entity("FacultyManagement.Domain.Courses.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("course_code");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("course_name");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_on");

                    b.Property<int>("Credits")
                        .HasColumnType("int")
                        .HasColumnName("credits");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset?>("LastModifiedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("last_modified_on");

                    b.HasKey("Id")
                        .HasName("pk_courses");

                    b.ToTable("courses", (string)null);
                });

            modelBuilder.Entity("FacultyManagement.Domain.Evaluations.Evaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comments");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_on");

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("evaluation_date");

                    b.Property<string>("Evaluator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("evaluator");

                    b.Property<Guid>("EvaluatorID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("evaluator_id");

                    b.Property<Guid>("FacultyID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("faculty_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset?>("LastModifiedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("last_modified_on");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.HasKey("Id")
                        .HasName("pk_evaluations");

                    b.HasIndex("FacultyID")
                        .HasDatabaseName("ix_evaluations_faculty_id");

                    b.ToTable("evaluations", (string)null);
                });

            modelBuilder.Entity("FacultyManagement.Domain.Evaluators.Evaluator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_on");

                    b.Property<string>("EvaluatorEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("evaluator_email");

                    b.Property<string>("EvaluatorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("evaluator_name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset?>("LastModifiedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("last_modified_on");

                    b.HasKey("Id")
                        .HasName("pk_evaluators");

                    b.ToTable("evaluators", (string)null);
                });

            modelBuilder.Entity("FacultyManagement.Domain.Faculties.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_on");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_joining");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset?>("LastModifiedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("pk_faculties");

                    b.ToTable("faculties", (string)null);
                });

            modelBuilder.Entity("FacultyManagement.Domain.Qualifications.Qualification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_on");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("degree");

                    b.Property<Guid>("FacultyID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("faculty_id");

                    b.Property<string>("Institution")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("institution");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset?>("LastModifiedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("last_modified_on");

                    b.Property<int>("YearOfCompletion")
                        .HasColumnType("int")
                        .HasColumnName("year_of_completion");

                    b.HasKey("Id")
                        .HasName("pk_qualifications");

                    b.HasIndex("FacultyID")
                        .HasDatabaseName("ix_qualifications_faculty_id");

                    b.ToTable("qualifications", (string)null);
                });

            modelBuilder.Entity("FacultyManagement.Domain.Schedules.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_on");

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("day_of_week");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_time");

                    b.Property<Guid>("FacultyID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("faculty_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsOfficeHour")
                        .HasColumnType("bit")
                        .HasColumnName("is_office_hour");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset?>("LastModifiedOn")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("last_modified_on");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_time");

                    b.HasKey("Id")
                        .HasName("pk_schedules");

                    b.HasIndex("FacultyID")
                        .HasDatabaseName("ix_schedules_faculty_id");

                    b.ToTable("schedules", (string)null);
                });

            modelBuilder.Entity("FacultyManagement.Domain.CourseAssignments.CourseAssignment", b =>
                {
                    b.HasOne("FacultyManagement.Domain.Courses.Course", "Course")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_assignments_courses_course_id");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("FacultyManagement.Domain.Evaluations.Evaluation", b =>
                {
                    b.HasOne("FacultyManagement.Domain.Faculties.Faculty", "Faculty")
                        .WithMany("Evaluations")
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_evaluations_faculties_faculty_id");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("FacultyManagement.Domain.Qualifications.Qualification", b =>
                {
                    b.HasOne("FacultyManagement.Domain.Faculties.Faculty", "Faculty")
                        .WithMany("Qualifications")
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_qualifications_faculties_faculty_id");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("FacultyManagement.Domain.Schedules.Schedule", b =>
                {
                    b.HasOne("FacultyManagement.Domain.Faculties.Faculty", "Faculty")
                        .WithMany("Schedules")
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_schedules_faculties_faculty_id");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("FacultyManagement.Domain.Courses.Course", b =>
                {
                    b.Navigation("CourseAssignments");
                });

            modelBuilder.Entity("FacultyManagement.Domain.Faculties.Faculty", b =>
                {
                    b.Navigation("Evaluations");

                    b.Navigation("Qualifications");

                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
